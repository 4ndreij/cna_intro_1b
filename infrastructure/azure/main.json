{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "5260055613812984275"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "dapr-microservices-env",
      "metadata": {
        "description": "The name of the container apps environment"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the resources"
      }
    },
    "namePrefix": {
      "type": "string",
      "defaultValue": "daprmicro",
      "metadata": {
        "description": "The name prefix for resources"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "[format('{0}registry', parameters('namePrefix'))]",
      "metadata": {
        "description": "The container registry name"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": "[format('{0}logs', parameters('namePrefix'))]",
      "metadata": {
        "description": "Log Analytics workspace name"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}insights', parameters('namePrefix'))]",
      "metadata": {
        "description": "Application Insights name"
      }
    },
    "productServiceImage": {
      "type": "string",
      "defaultValue": "productservice:latest",
      "metadata": {
        "description": "Product Service container image"
      }
    },
    "orderServiceImage": {
      "type": "string",
      "defaultValue": "orderservice:latest",
      "metadata": {
        "description": "Order Service container image"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[parameters('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "workspaceCapping": {
          "dailyQuotaGb": 1
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[parameters('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true,
        "policies": {
          "quarantinePolicy": {
            "status": "disabled"
          },
          "trustPolicy": {
            "type": "Notary",
            "status": "disabled"
          },
          "retentionPolicy": {
            "days": 7,
            "status": "disabled"
          },
          "exportPolicy": {
            "status": "enabled"
          }
        },
        "encryption": {
          "status": "disabled"
        },
        "dataEndpointEnabled": false,
        "publicNetworkAccess": "Enabled",
        "networkRuleBypassOptions": "AzureServices",
        "zoneRedundancy": "Disabled"
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-05-01",
      "name": "[parameters('environmentName')]",
      "location": "[parameters('location')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), '2023-09-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), '2023-09-01').primarySharedKey]"
          }
        },
        "daprAIInstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]",
        "daprAIConnectionString": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments/daprComponents",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('environmentName'), 'product-pubsub')]",
      "properties": {
        "componentType": "pubsub.redis",
        "version": "v1",
        "metadata": [
          {
            "name": "redisHost",
            "value": "[format('{0}.redis.cache.windows.net:6380', format('{0}redis', parameters('namePrefix')))]"
          },
          {
            "name": "redisPassword",
            "secretRef": "redis-password"
          },
          {
            "name": "enableTLS",
            "value": "true"
          }
        ],
        "secrets": [
          {
            "name": "redis-password",
            "value": "[listKeys(resourceId('Microsoft.Cache/redis', format('{0}redis', parameters('namePrefix'))), '2023-08-01').primaryKey]"
          }
        ],
        "scopes": [
          "productservice",
          "orderservice"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "[resourceId('Microsoft.Cache/redis', format('{0}redis', parameters('namePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments/daprComponents",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('environmentName'), 'statestore')]",
      "properties": {
        "componentType": "state.redis",
        "version": "v1",
        "metadata": [
          {
            "name": "redisHost",
            "value": "[format('{0}.redis.cache.windows.net:6380', format('{0}redis', parameters('namePrefix')))]"
          },
          {
            "name": "redisPassword",
            "secretRef": "redis-password"
          },
          {
            "name": "enableTLS",
            "value": "true"
          }
        ],
        "secrets": [
          {
            "name": "redis-password",
            "value": "[listKeys(resourceId('Microsoft.Cache/redis', format('{0}redis', parameters('namePrefix'))), '2023-08-01').primaryKey]"
          }
        ],
        "scopes": [
          "productservice",
          "orderservice"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "[resourceId('Microsoft.Cache/redis', format('{0}redis', parameters('namePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Cache/redis",
      "apiVersion": "2023-08-01",
      "name": "[format('{0}redis', parameters('namePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "Basic",
          "family": "C",
          "capacity": 0
        },
        "enableNonSslPort": false,
        "minimumTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "redisConfiguration": {
          "maxmemory-policy": "allkeys-lru"
        }
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-productservice', parameters('namePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "configuration": {
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": true,
            "targetPort": 8080,
            "allowInsecure": false,
            "traffic": [
              {
                "weight": 100,
                "latestRevision": true
              }
            ]
          },
          "dapr": {
            "enabled": true,
            "appId": "productservice",
            "appProtocol": "http",
            "appPort": 8080,
            "logLevel": "info",
            "enableApiLogging": true
          },
          "registries": [
            {
              "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]",
              "username": "[parameters('containerRegistryName')]",
              "passwordSecretRef": "registry-password"
            }
          ],
          "secrets": [
            {
              "name": "registry-password",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').passwords[0].value]"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "name": "productservice",
              "image": "[parameters('productServiceImage')]",
              "resources": {
                "cpu": "[json('0.5')]",
                "memory": "1Gi"
              },
              "env": [
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "Production"
                },
                {
                  "name": "ASPNETCORE_URLS",
                  "value": "http://+:8080"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
                }
              ],
              "probes": [
                {
                  "type": "Liveness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30
                },
                {
                  "type": "Readiness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 1,
            "maxReplicas": 10,
            "rules": [
              {
                "name": "http-scaling",
                "http": {
                  "metadata": {
                    "concurrentRequests": "50"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), 'product-pubsub')]",
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), 'statestore')]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-orderservice', parameters('namePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "configuration": {
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": true,
            "targetPort": 8080,
            "allowInsecure": false,
            "traffic": [
              {
                "weight": 100,
                "latestRevision": true
              }
            ]
          },
          "dapr": {
            "enabled": true,
            "appId": "orderservice",
            "appProtocol": "http",
            "appPort": 8080,
            "logLevel": "info",
            "enableApiLogging": true
          },
          "registries": [
            {
              "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]",
              "username": "[parameters('containerRegistryName')]",
              "passwordSecretRef": "registry-password"
            }
          ],
          "secrets": [
            {
              "name": "registry-password",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').passwords[0].value]"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "name": "orderservice",
              "image": "[parameters('orderServiceImage')]",
              "resources": {
                "cpu": "[json('0.5')]",
                "memory": "1Gi"
              },
              "env": [
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "Production"
                },
                {
                  "name": "ASPNETCORE_URLS",
                  "value": "http://+:8080"
                },
                {
                  "name": "Services__ProductServiceUrl",
                  "value": "http://productservice"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
                }
              ],
              "probes": [
                {
                  "type": "Liveness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30
                },
                {
                  "type": "Readiness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 10
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 1,
            "maxReplicas": 10,
            "rules": [
              {
                "name": "http-scaling",
                "http": {
                  "metadata": {
                    "concurrentRequests": "50"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), 'product-pubsub')]",
        "[resourceId('Microsoft.App/managedEnvironments/daprComponents', parameters('environmentName'), 'statestore')]",
        "[resourceId('Microsoft.App/containerApps', format('{0}-productservice', parameters('namePrefix')))]"
      ]
    }
  ],
  "outputs": {
    "containerAppsEnvironmentId": {
      "type": "string",
      "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[parameters('containerRegistryName')]"
    },
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]"
    },
    "productServiceUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', format('{0}-productservice', parameters('namePrefix'))), '2023-05-01').configuration.ingress.fqdn]"
    },
    "orderServiceUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', format('{0}-orderservice', parameters('namePrefix'))), '2023-05-01').configuration.ingress.fqdn]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
    },
    "applicationInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
    }
  }
}